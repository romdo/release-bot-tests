---
name: CI
on: push

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Pretend to run tests
        run: |
          echo 'Running tests... all OK'

  release-pr:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    outputs:
      pr: ${{ steps.release-please.outputs.pr }}
      prs: ${{ steps.release-please.outputs.prs }}
    steps:
      - uses: tibdex/github-app-token@v1
        id: github-app-token
        with:
          app_id: ${{ secrets.RELEASE_BOT_APP_ID }}
          private_key: ${{ secrets.RELEASE_BOT_PRIVATE_KEY }}
      - uses: google-github-actions/release-please-action@v3
        id: release-please
        with:
          token: ${{ steps.github-app-token.outputs.token }}
          command: release-pr
          release-type: simple
          version-file: VERSION
          bump-minor-pre-major: true
          bump-patch-for-minor-pre-major: true
          extra-files: |
            README.md
      - name: Debug print all
        run: |
          echo '${{ steps.release-please.outputs.all }}' | jq

  create-release:
    runs-on: ubuntu-latest
    needs: [test]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    outputs:
      release_created: ${{ steps.release-please.outputs.release_created }}
      tag_name: ${{ steps.release-please.outputs.tag_name }}
      version: ${{ steps.release-please.outputs.version }}
    steps:
      - uses: tibdex/github-app-token@v1
        id: github-app-token
        with:
          app_id: ${{ secrets.RELEASE_BOT_APP_ID }}
          private_key: ${{ secrets.RELEASE_BOT_PRIVATE_KEY }}
      - uses: google-github-actions/release-please-action@v3
        id: release-please
        with:
          token: ${{ steps.github-app-token.outputs.token }}
          command: github-release
          release-type: simple
          version-file: VERSION
          bump-minor-pre-major: true
          bump-patch-for-minor-pre-major: true
          extra-files: |
            README.md
      - name: Debug print all
        run: |
          echo '${{ steps.release-please.outputs.all }}' | jq

  debug-release-pr:
    runs-on: ubuntu-latest
    needs: [release-pr]
    if: needs.release-please.outputs.prs
    steps:
      - name: Print PRs
        run: |
          echo '${{ needs.release-please.outputs.prs }}' | jq

  debug-release:
    runs-on: ubuntu-latest
    needs: [create-release, test]
    if: needs.release-please.outputs.release_created
    steps:
      - name: Print release info
        run: |
          echo "Release created: ${{ needs.release-please.outputs.release_created }}"
          echo "Tag name: ${{ needs.release-please.outputs.tag_name }}"
          echo "Version: ${{ needs.release-please.outputs.version }}"
